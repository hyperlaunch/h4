name: Publish Packages

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}
      VERSION: ${{ github.event.release.tag_name || '0.0.4' }}
    steps:
      - uses: actions/checkout@v4
      
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Dependencies
        run: bun install

      - name: Publish create-h4-app
        run: |
          cat packages/create-h4-app/package.json | jq '. * {version: $VERSION} | if .dependencies then .dependencies = (.dependencies | with_entries(if .value == "workspace:*" then .value = $VERSION else . end)) else . end' --arg VERSION "$VERSION" > tmp.json
          mv tmp.json packages/create-h4-app/package.json
          cd packages/create-h4-app
          bun publish --access public --access public --auth-type legacy
          cd ../..

      - name: Publish core
        run: |
          cat packages/core/package.json | jq '. * {version: $VERSION} | if .dependencies then .dependencies = (.dependencies | with_entries(if .value == "workspace:*" then .value = $VERSION else . end)) else . end' --arg VERSION "$VERSION" > tmp.json
          mv tmp.json packages/core/package.json
          cd packages/core
          bun publish --access public --access public --auth-type legacy
          cd ../..

      - name: Publish jobs
        run: |
          cat packages/jobs/package.json | jq '. * {version: $VERSION} | if .dependencies then .dependencies = (.dependencies | with_entries(if .value == "workspace:*" then .value = $VERSION else . end)) else . end' --arg VERSION "$VERSION" > tmp.json
          mv tmp.json packages/jobs/package.json
          cd packages/jobs
          bun publish --access public --access public --auth-type legacy
          cd ../..

      - name: Publish queue
        run: |
          cat packages/queue/package.json | jq '. * {version: $VERSION} | if .dependencies then .dependencies = (.dependencies | with_entries(if .value == "workspace:*" then .value = $VERSION else . end)) else . end' --arg VERSION "$VERSION" > tmp.json
          mv tmp.json packages/queue/package.json
          cd packages/queue
          bun publish --access public --access public --auth-type legacy
          cd ../..

      - name: Publish scheduler
        run: |
          cat packages/scheduler/package.json | jq '. * {version: $VERSION} | if .dependencies then .dependencies = (.dependencies | with_entries(if .value == "workspace:*" then .value = $VERSION else . end)) else . end' --arg VERSION "$VERSION" > tmp.json
          mv tmp.json packages/scheduler/package.json
          cd packages/scheduler
          bun publish --access public --access public --auth-type legacy
          cd ../..

      - name: Publish models
        run: |
          cat packages/models/package.json | jq '. * {version: $VERSION} | if .dependencies then .dependencies = (.dependencies | with_entries(if .value == "workspace:*" then .value = $VERSION else . end)) else . end' --arg VERSION "$VERSION" > tmp.json
          mv tmp.json packages/models/package.json
          cd packages/models
          bun publish --access public --access public --auth-type legacy
          cd ../..

      - name: Publish server
        run: |
          cat packages/server/package.json | jq '. * {version: $VERSION} | if .dependencies then .dependencies = (.dependencies | with_entries(if .value == "workspace:*" then .value = $VERSION else . end)) else . end' --arg VERSION "$VERSION" > tmp.json
          mv tmp.json packages/server/package.json
          cd packages/server
          bun publish --access public --access public --auth-type legacy
          cd ../..